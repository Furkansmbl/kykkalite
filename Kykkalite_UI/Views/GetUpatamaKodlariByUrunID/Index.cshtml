@using static Kykkalite_UI.Controllers.GetUpatamaKodlariByUrunIDController
@using System.Text.Json
@using System.Text.Encodings.Web

@model QueryViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "";
}



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Query Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #fff;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: auto;
            padding: 20px;
            border-radius: 8px;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
        }

        .form-group {
            margin-bottom: 20px;
            display: flex;
            flex-direction: column;
        }

            .form-group label {
                font-weight: bold;
                margin-bottom: 5px;
            }

            .form-group input[type="text"],
            .form-group input[type="number"],
            .form-group select {
                padding: 10px;
                border: none;
                border-radius: 5px;
                margin-top: 5px;
                font-size: 16px;
                background-color: #fff;
                box-shadow: none;
            }

            .form-group button {
                padding: 10px 20px;
                background-color: #007bff;
                border: none;
                color: #fff;
                border-radius: 5px;
                cursor: pointer;
                transition: background-color 0.3s;
                font-size: 16px;
                box-shadow: none;
            }

                .form-group button:hover {
                    background-color: #0056b3;
                }

        table {
            width: 100%;
            margin-top: 20px;
            background-color: #fff;
            border-collapse: collapse;
        }

        th, td {
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #007bff;
            color: #fff;
        }

        tr:hover {
            background-color: #f2f2f2;
        }

        input[type="datetime-local"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-top: 5px;
            font-size: 16px;
            background-color: #fff;
        }

        .btn-outline-success {
            padding: 8px 16px;
            border: 2px solid #28a745;
            color: #28a745;
            background-color: transparent;
            border-radius: 5px;
            text-decoration: none;
            transition: background-color 0.3s, color 0.3s;
        }

            .btn-outline-success:hover {
                background-color: #28a745;
                color: #fff;
            }

        .no-results {
            margin-top: 20px;
            color: #dc3545;
        }

        .table-container {
            overflow-x: auto;
        }

        table {
            box-shadow: none; 
        }

        input {
            width: 75px;
            padding: 10px;
            border-radius: 10px;
            outline: none;
            border: 1px solid #c5c5c5;
            font-size: 21px;
        }
    </style>
</head>
<body>
    <div class="form-group">
        <td><a href="/ChooseHmOrU/Index" class="btn btn-outline-success">Ana Sayfaya Git</a></td>

    </div>

    <div class="form-group">
        <td><a href="/GetHmatamaByhmId/Index" class="btn btn-outline-success">Hammadde Sayfasına Git</a></td>

    </div>
    <div class="container-fluid">
        <form method="post">
            <div class="form-group">
                <label for="fabrikaId">Fabrika Adı:</label>
                <select id="fabrikaId" name="fabrikaId" required>
                    <option value="1">ESKİŞEHİR</option>
                    <option value="2">ADANA</option>
                    <option value="3">DİYARBAKIR</option>
                    <option value="4">SAMSUN</option>
                </select>
            </div>

            <div class="form-group">
                <label for="personelAdSoyad">Personel:</label>
                <input type="text" class="form-control" value="@ViewBag.PersonelSicilNo" readonly />

            </div>

            <div class="form-group">
                <label for="malzemeAciklamasi">Malzeme Açıklaması:</label>
                @Html.DropDownList("MalzemeAciklamasi", (List<SelectListItem>)ViewBag.v, new { @class = "form-control" })
            </div>

            <div class="form-group">
                <button type="submit">Query</button>
            </div>
        </form>

        <div class="table-container-fluid">
            @if (Model != null && Model.ResultSet != null && Model.ResultSet.Any())
            {
                <table>
                    <thead>
                        <tr>
                            <th>Ürün ID</th>
                            <th>Sıra No</th>
                            <th>Üretim Tarihi</th>
                            <th>Kontrol Saati</th>
                            <th>Numune Seri No Sarj No</th>
                            <th>Müdahale Varmı</th>
                            <th>Açıklama</th>
                            <th>Onay Durumu</th>
                            <th>Amir Onay Durumu</th>
                            <th>Personel Sicil No</th>

                            @foreach (var item in Model.ResultSet)
                            {
                                <th>
                                    <sub style="font-size: smaller; color: black">ÜŞOS: @item.UstSartliKabulSiniri</sub>
                                    <br />
                                    <sub style="font-size: smaller; color: black">ÜOS: @item.UstOnaySiniri</sub>
                                    <br />
                                    <sub style="font-size: smaller; color: black">AOS: @item.AltOnaySiniri</sub>
                                    <br />
                                    <sub style="font-size: smaller; color: black">AŞOS: @item.AltSartliKabulSiniri</sub>
                                    <br />
                                    @item.KontrolParametresi
                                </th>
                            }
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><input type="number" name="UrunId" class="static" value="@Model.ResultSet[0].UrunId" /></td>
                            <td>
                                <input type="text" name="SiraNo" class="static" value="@{
                                var parts = Model.ResultSet[0].SiraNo.Split('-');
                                var lastPart = parts[parts.Length - 1];
                                if (decimal.TryParse(lastPart, out decimal lastDecimal)) {
                                 var newValue = lastDecimal + 1;
                                 @Html.Raw(newValue.ToString());
                                      
                                } else {
                                   @Html.Raw("0");
                                }}" />
                            </td>
                            <td><input type="text" name="UretimTarihi" class="static" /></td>
                            <td><input type="text" name="KontrolSaati" class="static" /></td>
                            <td><input type="text" name="NumuneSeriNoSarjNo" class="static" /></td>
                            <td>
                                <select name="MudahaleVarmi" class="static">
                                    <option value="hayır" selected>hayır</option>
                                    <option value="evet">evet</option>
                                </select>
                            </td>
                            <td><input type="text" name="Aciklama" class="static" /></td>
                            <td>
                                <input id="onay_durumu" type="hidden" name="OnayDurumu"/>
                                <p id="onay_durumu_p">Yukleniyor...</p>
                                <input type="hidden" name="OlusturmaTarihi" class="static" />
                                <input type="hidden" name="red" class="static" />
                                <input type="hidden" name="yellow" class="static" />
                                <input type="hidden" name="green" class="static" />
                                <input type="hidden" name="malzemeAciklamasi" class="static" value="@Model.ResultSet[0].MalzemeAciklamasi" />
                                <input type="hidden" name="Versiyon" class="static" value="@Model.ResultSet[0].Versiyon" />
                                @for (int i = 0; i < Model.ResultSet.Count; i++)
                                {
                                    var originalValue = Model.ResultSet[i].Value;
                                    var segments = originalValue.Split('-');
                                    var last13Segments = segments.Skip(Math.Max(0, segments.Length - 13));
                                    var concatenatedValue = string.Join("-", last13Segments);
                                    <input type="hidden" name="Trend@(i+1)" class="static" value="@concatenatedValue" />
                                }
                                @for (int i = 0; i < Model.ResultSet.Count; i++)
                                {
                                    <input type="hidden" name="KontrolParametresi@(i+1)" class="static" value="@Model.ResultSet[i].KontrolParametresi" />
                                }
                                @for (int i = 0; i < Model.ResultSet.Count; i++)
                                {
                                    <input type="hidden" name="AltSartliKabulSiniri@(i+1)" class="static" value="@Model.ResultSet[i].AltSartliKabulSiniri" />
                                }
                                @for (int i = 0; i < Model.ResultSet.Count; i++)
                                {
                                    <input type="hidden" name="UstSartliKabulSiniri@(i+1)" class="static" value="@Model.ResultSet[i].UstSartliKabulSiniri" />
                                }
                                @for (int i = 0; i < Model.ResultSet.Count; i++)
                                {
                                    <input type="hidden" name="AltOnaySiniri@(i+1)" class="static" value="@Model.ResultSet[i].AltOnaySiniri" />
                                }
                                @for (int i = 0; i < Model.ResultSet.Count; i++)
                                {
                                    <input type="hidden" name="UstOnaySiniri@(i+1)" class="static" value="@Model.ResultSet[i].UstOnaySiniri" />
                                }
                            </td>

                            <td><input type="text" name="AmirOnayDurumu" class="static" /></td>
                            <td><input type="text" name="PersonelSicilNo" class="static" value="@ViewBag.PersonelSicilNo" /></td>

                            @for (int i = 0; i < Model.ResultSet.Count; i++)
                            {
                                var name = $"Value{i + 1}";
                                <td>
                                    <input type="text" name="@name" id="@i" class="static colorcheck" oninput="updateColor(@i)" onkeydown="updateColor(@i)" />
                                </td>
                            }
                            <td>
                                <button type="button" class="btn-outline-success" id="sendButton">Gönder</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <table>
                    <thead>
                        <tr>
                            <th>Ürün ID</th>
                            <th>Nümune ID</th>
                            <th>Üretim Tarihi</th>
                            <th>Kontrol Saati</th>
                            <th>Numune Seri No Sarj No</th>
                            <th>Müdahale Varmı</th>
                            <th>Açıklama</th>
                            <th>Amir Onay Durumu</th>

                            @foreach (var item in Model.ResultSet)
                            {
                                <th>
                                    <sub style="font-size: smaller; color: black">ÜŞOS: @item.UstSartliKabulSiniri</sub>
                                    <br />
                                    <sub style="font-size: smaller; color: black">ÜOS: @item.UstOnaySiniri</sub>
                                    <br />
                                    <sub style="font-size: smaller; color: black">AOS: @item.AltOnaySiniri</sub>
                                    <br />
                                    <sub style="font-size: smaller; color: black">AŞOS: @item.AltSartliKabulSiniri</sub>
                                    <br />
                                    @item.KontrolParametresi
                                </th>
                            }
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                    <tbody>
                            @{
                                     if (Model.ResultSet.Count == 1)
                                {
                                    var rowData = new List<Tuple<string, string, string, string, string, string, string, Tuple<string>>>();

                                    var firstResult = Model.ResultSet[0];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add(new Tuple<string, string, string, string, string, string, string, Tuple<string>>(
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        Tuple.Create(
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                    for (int i = 0; i < last50Rows.Count; i++)
                                    {
                                    <tr>
                                        <td>@Model.ResultSet[0].UrunId</td>
                                        <td>@last50Rows[i].Item1</td>
                                        <td>@last50Rows[i].Item2</td>
                                        <td>@last50Rows[i].Item3</td>
                                        <td>@last50Rows[i].Item4</td>
                                        <td>@last50Rows[i].Item5</td>
                                        <td>@last50Rows[i].Item6</td>
                                        <td>@last50Rows[i].Item7</td>
                                        <td>@last50Rows[i].Rest.Item1</td>
                                    </tr>
                                    }
                                }
                                else if (Model.ResultSet.Count == 2)
                                {
                                    var rowData = new List<Tuple<string, string, string, string, string, string, string, Tuple<string, string>>>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add(new Tuple<string, string, string, string, string, string, string, Tuple<string, string>>(
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        Tuple.Create(
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                    for (int i = 0; i < last50Rows.Count; i++)
                                    {
                                    <tr>
                                        <td>@Model.ResultSet[0].UrunId</td>
                                        <td>@last50Rows[i].Item1</td>
                                        <td>@last50Rows[i].Item2</td>
                                        <td>@last50Rows[i].Item3</td>
                                        <td>@last50Rows[i].Item4</td>
                                        <td>@last50Rows[i].Item5</td>
                                        <td>@last50Rows[i].Item6</td>
                                        <td>@last50Rows[i].Item7</td>
                                        <td>@last50Rows[i].Rest.Item1</td>
                                        <td>@last50Rows[i].Rest.Item2</td>
                                    </tr>
                                    }
                                }
                                else if (Model.ResultSet.Count == 3)
                                {
                                    var rowData = new List<Tuple<string, string, string, string, string, string, string, Tuple<string, string, string>>>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];
                                    var thirdResult = Model.ResultSet[2];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');
                                    var splitDataValue3 = thirdResult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length, splitDataValue3.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add(new Tuple<string, string, string, string, string, string, string, Tuple<string, string, string>>(
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        Tuple.Create(
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty,
                                        i < splitDataValue3.Length ? splitDataValue3[i] : string.Empty
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                    for (int i = 0; i < last50Rows.Count; i++)
                                    {
                                    <tr>
                                        <td>@Model.ResultSet[0].UrunId</td>
                                        <td>@last50Rows[i].Item1</td>
                                        <td>@last50Rows[i].Item2</td>
                                        <td>@last50Rows[i].Item3</td>
                                        <td>@last50Rows[i].Item4</td>
                                        <td>@last50Rows[i].Item5</td>
                                        <td>@last50Rows[i].Item6</td>
                                        <td>@last50Rows[i].Item7</td>
                                        <td>@last50Rows[i].Rest.Item1</td>
                                        <td>@last50Rows[i].Rest.Item2</td>
                                        <td>@last50Rows[i].Rest.Item3</td>
                                    </tr>
                                    }
                                }
                                else if (Model.ResultSet.Count == 4)
                                {
                                    var rowData = new List<Tuple<string, string, string, string, string, string, string, Tuple<string, string, string, string>>>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];
                                    var thirdResult = Model.ResultSet[2];
                                    var fourthResult = Model.ResultSet[3];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');
                                    var splitDataValue3 = thirdResult.Value.Split('-');
                                    var splitDataValue4 = fourthResult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length, splitDataValue3.Length, splitDataValue4.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add(new Tuple<string, string, string, string, string, string, string, Tuple<string, string, string, string>>(
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        Tuple.Create(
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty,
                                        i < splitDataValue3.Length ? splitDataValue3[i] : string.Empty,
                                        i < splitDataValue4.Length ? splitDataValue4[i] : string.Empty
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.ToList();

                                    for (int i = 0; i < last50Rows.Count; i++)
                                    {
                                    <tr>
                                        <td>@Model.ResultSet[0].UrunId</td>
                                        <td>@last50Rows[i].Item1</td>
                                        <td>@last50Rows[i].Item2</td>
                                        <td>@last50Rows[i].Item3</td>
                                        <td>@last50Rows[i].Item4</td>
                                        <td>@last50Rows[i].Item5</td>
                                        <td>@last50Rows[i].Item6</td>
                                        <td>@last50Rows[i].Item7</td>
                                        <td>@last50Rows[i].Rest.Item1</td>
                                        <td>@last50Rows[i].Rest.Item2</td>
                                        <td>@last50Rows[i].Rest.Item3</td>
                                        <td>@last50Rows[i].Rest.Item4</td>
                                    </tr>
                                    }
                                }
                                else if (Model.ResultSet.Count == 5)
                                {
                                    var rowData = new List<Tuple<string, string, string, string, string, string, string, Tuple<string, string, string, string, string>>>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];
                                    var thirdResult = Model.ResultSet[2];
                                    var fourthResult = Model.ResultSet[3];
                                    var fifthResult = Model.ResultSet[4];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');
                                    var splitDataValue3 = thirdResult.Value.Split('-');
                                    var splitDataValue4 = fourthResult.Value.Split('-');
                                    var splitDataValue5 = fifthResult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length, splitDataValue3.Length, splitDataValue4.Length, splitDataValue5.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add(new Tuple<string, string, string, string, string, string, string, Tuple<string, string, string, string, string>>(
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        Tuple.Create(
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty,
                                        i < splitDataValue3.Length ? splitDataValue3[i] : string.Empty,
                                        i < splitDataValue4.Length ? splitDataValue4[i] : string.Empty,
                                        i < splitDataValue5.Length ? splitDataValue5[i] : string.Empty
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                    for (int i = 0; i < last50Rows.Count; i++)
                                    {
                                    <tr>
                                        <td>@Model.ResultSet[0].UrunId</td>
                                        <td>@last50Rows[i].Item1</td>
                                        <td>@last50Rows[i].Item2</td>
                                        <td>@last50Rows[i].Item3</td>
                                        <td>@last50Rows[i].Item4</td>
                                        <td>@last50Rows[i].Item5</td>
                                        <td>@last50Rows[i].Item6</td>
                                        <td>@last50Rows[i].Item7</td>
                                        <td>@last50Rows[i].Rest.Item1</td>
                                        <td>@last50Rows[i].Rest.Item2</td>
                                        <td>@last50Rows[i].Rest.Item3</td>
                                        <td>@last50Rows[i].Rest.Item4</td>
                                        <td>@last50Rows[i].Rest.Item5</td>
                                    </tr>
                                    }
                                }
                                else if (Model.ResultSet.Count == 6)
                                {
                                    var rowData = new List<Tuple<string, string, string, string, string, string, string, Tuple<string, string, string, string, string, string>>>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];
                                    var thirdResult = Model.ResultSet[2];
                                    var fourthResult = Model.ResultSet[3];
                                    var fifthResult = Model.ResultSet[4];
                                    var sixresult = Model.ResultSet[5];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');
                                    var splitDataValue3 = thirdResult.Value.Split('-');
                                    var splitDataValue4 = fourthResult.Value.Split('-');
                                    var splitDataValue5 = fifthResult.Value.Split('-');
                                    var splitDataValue6 = sixresult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length, splitDataValue3.Length, splitDataValue4.Length, splitDataValue5.Length, splitDataValue6.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add(new Tuple<string, string, string, string, string, string, string, Tuple<string, string, string, string, string,string>>(
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        Tuple.Create(
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty,
                                        i < splitDataValue3.Length ? splitDataValue3[i] : string.Empty,
                                        i < splitDataValue4.Length ? splitDataValue4[i] : string.Empty,
                                        i < splitDataValue5.Length ? splitDataValue5[i] : string.Empty,
                                        i < splitDataValue6.Length ? splitDataValue6[i] : string.Empty

                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                    for (int i = 0; i < last50Rows.Count; i++)
                                    {
                                    <tr>
                                        <td>@Model.ResultSet[0].UrunId</td>
                                        <td>@last50Rows[i].Item1</td>
                                        <td>@last50Rows[i].Item2</td>
                                        <td>@last50Rows[i].Item3</td>
                                        <td>@last50Rows[i].Item4</td>
                                        <td>@last50Rows[i].Item5</td>
                                        <td>@last50Rows[i].Item6</td>
                                        <td>@last50Rows[i].Item7</td>
                                        <td>@last50Rows[i].Rest.Item1</td>
                                        <td>@last50Rows[i].Rest.Item2</td>
                                        <td>@last50Rows[i].Rest.Item3</td>
                                        <td>@last50Rows[i].Rest.Item4</td>
                                        <td>@last50Rows[i].Rest.Item5</td>
                                        <td>@last50Rows[i].Rest.Item6</td>
                                    </tr>
                                    }
                                }
                                else if (Model.ResultSet.Count == 7)
                                {
                                    var rowData = new List<Tuple<string, string, string, string, string, string, string, Tuple<string, string, string, string, string, string,string>>>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];
                                    var thirdResult = Model.ResultSet[2];
                                    var fourthResult = Model.ResultSet[3];
                                    var fifthResult = Model.ResultSet[4];
                                    var sixresult = Model.ResultSet[5];
                                    var sevenresult = Model.ResultSet[6];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');
                                    var splitDataValue3 = thirdResult.Value.Split('-');
                                    var splitDataValue4 = fourthResult.Value.Split('-');
                                    var splitDataValue5 = fifthResult.Value.Split('-');
                                    var splitDataValue6 = sixresult.Value.Split('-');
                                    var splitDataValue7 = sevenresult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length, splitDataValue3.Length, splitDataValue4.Length, splitDataValue5.Length, splitDataValue6.Length, splitDataValue7.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add(new Tuple<string, string, string, string, string, string, string, Tuple<string, string, string, string, string, string,string>>(
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        Tuple.Create(
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty,
                                        i < splitDataValue3.Length ? splitDataValue3[i] : string.Empty,
                                        i < splitDataValue4.Length ? splitDataValue4[i] : string.Empty,
                                        i < splitDataValue5.Length ? splitDataValue5[i] : string.Empty,
                                        i < splitDataValue6.Length ? splitDataValue6[i] : string.Empty,
                                        i < splitDataValue7.Length ? splitDataValue7[i] : string.Empty
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                    for (int i = 0; i < last50Rows.Count; i++)
                                    {
                                    <tr>
                                        <td>@Model.ResultSet[0].UrunId</td>
                                        <td>@last50Rows[i].Item1</td>
                                        <td>@last50Rows[i].Item2</td>
                                        <td>@last50Rows[i].Item3</td>
                                        <td>@last50Rows[i].Item4</td>
                                        <td>@last50Rows[i].Item5</td>
                                        <td>@last50Rows[i].Item6</td>
                                        <td>@last50Rows[i].Item7</td>
                                        <td>@last50Rows[i].Rest.Item1</td>
                                        <td>@last50Rows[i].Rest.Item2</td>
                                        <td>@last50Rows[i].Rest.Item3</td>
                                        <td>@last50Rows[i].Rest.Item4</td>
                                        <td>@last50Rows[i].Rest.Item5</td>
                                        <td>@last50Rows[i].Rest.Item6</td>
                                        <td>@last50Rows[i].Rest.Item7</td>
                                    </tr>
                                    }
                                }
                                else if (Model.ResultSet.Count == 8)
                                {
                                    var rowData = new List<(string, string, string, string, string, string, string, (string, string, string, string, string, string, string, string))>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];
                                    var thirdResult = Model.ResultSet[2];
                                    var fourthResult = Model.ResultSet[3];
                                    var fifthResult = Model.ResultSet[4];
                                    var sixresult = Model.ResultSet[5];
                                    var sevenresult = Model.ResultSet[6];
                                    var eightresult = Model.ResultSet[7];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');
                                    var splitDataValue3 = thirdResult.Value.Split('-');
                                    var splitDataValue4 = fourthResult.Value.Split('-');
                                    var splitDataValue5 = fifthResult.Value.Split('-');
                                    var splitDataValue6 = sixresult.Value.Split('-');
                                    var splitDataValue7 = sevenresult.Value.Split('-');
                                    var splitDataValue8 = eightresult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length, splitDataValue3.Length, splitDataValue4.Length, splitDataValue5.Length, splitDataValue6.Length, splitDataValue7.Length, splitDataValue8.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add((
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        (
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty,
                                        i < splitDataValue3.Length ? splitDataValue3[i] : string.Empty,
                                        i < splitDataValue4.Length ? splitDataValue4[i] : string.Empty,
                                        i < splitDataValue5.Length ? splitDataValue5[i] : string.Empty,
                                        i < splitDataValue6.Length ? splitDataValue6[i] : string.Empty,
                                        i < splitDataValue7.Length ? splitDataValue7[i] : string.Empty,
                                        i < splitDataValue8.Length ? splitDataValue8[i] : string.Empty
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                            foreach (var row in last50Rows)
                                            {
                                            <tr>
                                                <td>@Model.ResultSet[0].UrunId</td>
                                                <td>@row.Item1</td>
                                                <td>@row.Item2</td>
                                                <td>@row.Item3</td>
                                                <td>@row.Item4</td>
                                                <td>@row.Item5</td>
                                                <td>@row.Item6</td>
                                                <td>@row.Item7</td>
                                                <td>@row.Item8.Item1</td>
                                                <td>@row.Item8.Item2</td>
                                                <td>@row.Item8.Item3</td>
                                                <td>@row.Item8.Item4</td>
                                                <td>@row.Item8.Item5</td>
                                                <td>@row.Item8.Item6</td>
                                                <td>@row.Item8.Item7</td>
                                                <td>@row.Item8.Item8</td>
                                            </tr>
                                            }
                                }
                                else if (Model.ResultSet.Count == 9)
                                {
                                    var rowData = new List<(string, string, string, string, string, string, string, (string, string, string, string, string, string, string, (string, string)))>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];
                                    var thirdResult = Model.ResultSet[2];
                                    var fourthResult = Model.ResultSet[3];
                                    var fifthResult = Model.ResultSet[4];
                                    var sixresult = Model.ResultSet[5];
                                    var sevenresult = Model.ResultSet[6];
                                    var eightresult = Model.ResultSet[7];
                                    var nineresult = Model.ResultSet[8];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');
                                    var splitDataValue3 = thirdResult.Value.Split('-');
                                    var splitDataValue4 = fourthResult.Value.Split('-');
                                    var splitDataValue5 = fifthResult.Value.Split('-');
                                    var splitDataValue6 = sixresult.Value.Split('-');
                                    var splitDataValue7 = sevenresult.Value.Split('-');
                                    var splitDataValue8 = eightresult.Value.Split('-');
                                    var splitDataValue9 = nineresult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length, splitDataValue3.Length, splitDataValue4.Length, splitDataValue5.Length, splitDataValue6.Length, splitDataValue7.Length, splitDataValue8.Length, splitDataValue9.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add((
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        (
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty,
                                        i < splitDataValue3.Length ? splitDataValue3[i] : string.Empty,
                                        i < splitDataValue4.Length ? splitDataValue4[i] : string.Empty,
                                        i < splitDataValue5.Length ? splitDataValue5[i] : string.Empty,
                                        i < splitDataValue6.Length ? splitDataValue6[i] : string.Empty,
                                        i < splitDataValue7.Length ? splitDataValue7[i] : string.Empty,
                                        (
                                        i < splitDataValue8.Length ? splitDataValue8[i] : string.Empty,
                                        i < splitDataValue9.Length ? splitDataValue9[i] : string.Empty
                                        )
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                    @foreach (var row in last50Rows)
                                    {
                                    <tr>
                                        <td>@Model.ResultSet[0].UrunId</td>
                                        <td>@row.Item1</td>
                                        <td>@row.Item2</td>
                                        <td>@row.Item3</td>
                                        <td>@row.Item4</td>
                                        <td>@row.Item5</td>
                                        <td>@row.Item6</td>
                                        <td>@row.Item7</td>
                                        <td>@row.Item8.Item1</td>
                                        <td>@row.Item8.Item2</td>
                                        <td>@row.Item8.Item3</td>
                                        <td>@row.Item8.Item4</td>
                                        <td>@row.Item8.Item5</td>
                                        <td>@row.Item8.Item6</td>
                                        <td>@row.Item8.Item7</td>
                                        <td>@row.Item8.Item8.Item1</td>
                                        <td>@row.Item8.Item8.Item2</td>
                                    </tr>
                                    }

                                }
                                else if (Model.ResultSet.Count == 10)
                                {
                                    var rowData = new List<(string, string, string, string, string, string, string, (string, string, string, string, string, string, string, (string, string, string)))>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];
                                    var thirdResult = Model.ResultSet[2];
                                    var fourthResult = Model.ResultSet[3];
                                    var fifthResult = Model.ResultSet[4];
                                    var sixresult = Model.ResultSet[5];
                                    var sevenresult = Model.ResultSet[6];
                                    var eightresult = Model.ResultSet[7];
                                    var nineresult = Model.ResultSet[8];
                                    var tenresult = Model.ResultSet[9];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');
                                    var splitDataValue3 = thirdResult.Value.Split('-');
                                    var splitDataValue4 = fourthResult.Value.Split('-');
                                    var splitDataValue5 = fifthResult.Value.Split('-');
                                    var splitDataValue6 = sixresult.Value.Split('-');
                                    var splitDataValue7 = sevenresult.Value.Split('-');
                                    var splitDataValue8 = eightresult.Value.Split('-');
                                    var splitDataValue9 = nineresult.Value.Split('-');
                                    var splitDataValue10 = tenresult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length, splitDataValue3.Length, splitDataValue4.Length, splitDataValue5.Length, splitDataValue6.Length, splitDataValue7.Length, splitDataValue8.Length, splitDataValue9.Length, splitDataValue10.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add((
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        (
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty,
                                        i < splitDataValue3.Length ? splitDataValue3[i] : string.Empty,
                                        i < splitDataValue4.Length ? splitDataValue4[i] : string.Empty,
                                        i < splitDataValue5.Length ? splitDataValue5[i] : string.Empty,
                                        i < splitDataValue6.Length ? splitDataValue6[i] : string.Empty,
                                        i < splitDataValue7.Length ? splitDataValue7[i] : string.Empty,
                                        (
                                        i < splitDataValue8.Length ? splitDataValue8[i] : string.Empty,
                                        i < splitDataValue9.Length ? splitDataValue9[i] : string.Empty,
                                        i < splitDataValue10.Length ? splitDataValue10[i] : string.Empty
                                        )
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                    @foreach (var row in last50Rows)
                                    {
                                    <tr>
                                        <td>@Model.ResultSet[0].UrunId</td>
                                        <td>@row.Item1</td>
                                        <td>@row.Item2</td>
                                        <td>@row.Item3</td>
                                        <td>@row.Item4</td>
                                        <td>@row.Item5</td>
                                        <td>@row.Item6</td>
                                        <td>@row.Item7</td>
                                        <td>@row.Item8.Item1</td>
                                        <td>@row.Item8.Item2</td>
                                        <td>@row.Item8.Item3</td>
                                        <td>@row.Item8.Item4</td>
                                        <td>@row.Item8.Item5</td>
                                        <td>@row.Item8.Item6</td>
                                        <td>@row.Item8.Item7</td>
                                        <td>@row.Item8.Item8.Item1</td>
                                        <td>@row.Item8.Item8.Item2</td>
                                        <td>@row.Item8.Item8.Item3</td>
                                    </tr>
                                    }

                                }
                                else if (Model.ResultSet.Count == 11)
                                {
                                    var rowData = new List<(string, string, string, string, string, string, string, (string, string, string, string, string, string, string, (string, string, string, string)))>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];
                                    var thirdResult = Model.ResultSet[2];
                                    var fourthResult = Model.ResultSet[3];
                                    var fifthResult = Model.ResultSet[4];
                                    var sixresult = Model.ResultSet[5];
                                    var sevenresult = Model.ResultSet[6];
                                    var eightresult = Model.ResultSet[7];
                                    var nineresult = Model.ResultSet[8];
                                    var tenresult = Model.ResultSet[9];
                                    var elevenresult = Model.ResultSet[10];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');
                                    var splitDataValue3 = thirdResult.Value.Split('-');
                                    var splitDataValue4 = fourthResult.Value.Split('-');
                                    var splitDataValue5 = fifthResult.Value.Split('-');
                                    var splitDataValue6 = sixresult.Value.Split('-');
                                    var splitDataValue7 = sevenresult.Value.Split('-');
                                    var splitDataValue8 = eightresult.Value.Split('-');
                                    var splitDataValue9 = nineresult.Value.Split('-');
                                    var splitDataValue10 = tenresult.Value.Split('-');
                                    var splitDataValue11 = elevenresult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length, splitDataValue3.Length, splitDataValue4.Length, splitDataValue5.Length, splitDataValue6.Length, splitDataValue7.Length, splitDataValue8.Length, splitDataValue9.Length, splitDataValue10.Length, splitDataValue11.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add((
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        (
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty,
                                        i < splitDataValue3.Length ? splitDataValue3[i] : string.Empty,
                                        i < splitDataValue4.Length ? splitDataValue4[i] : string.Empty,
                                        i < splitDataValue5.Length ? splitDataValue5[i] : string.Empty,
                                        i < splitDataValue6.Length ? splitDataValue6[i] : string.Empty,
                                        i < splitDataValue7.Length ? splitDataValue7[i] : string.Empty,
                                        (
                                        i < splitDataValue8.Length ? splitDataValue8[i] : string.Empty,
                                        i < splitDataValue9.Length ? splitDataValue9[i] : string.Empty,
                                        i < splitDataValue10.Length ? splitDataValue10[i] : string.Empty,
                                        i < splitDataValue11.Length ? splitDataValue11[i] : string.Empty
                                        )
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                            @foreach (var row in last50Rows)
                                            {
                                            <tr>
                                                <td>@Model.ResultSet[0].UrunId</td>
                                                <td>@row.Item1</td>
                                                <td>@row.Item2</td>
                                                <td>@row.Item3</td>
                                                <td>@row.Item4</td>
                                                <td>@row.Item5</td>
                                                <td>@row.Item6</td>
                                                <td>@row.Item7</td>
                                                <td>@row.Item8.Item1</td>
                                                <td>@row.Item8.Item2</td>
                                                <td>@row.Item8.Item3</td>
                                                <td>@row.Item8.Item4</td>
                                                <td>@row.Item8.Item5</td>
                                                <td>@row.Item8.Item6</td>
                                                <td>@row.Item8.Item7</td>
                                                <td>@row.Item8.Item8.Item1</td>
                                                <td>@row.Item8.Item8.Item2</td>
                                                <td>@row.Item8.Item8.Item3</td>
                                                <td>@row.Item8.Item8.Item4</td>
                                            </tr>
                                            }

                                }
                                else if (Model.ResultSet.Count == 12)
                                {
                                    var rowData = new List<(string, string, string, string, string, string, string, (string, string, string, string, string, string, string, (string, string, string, string,string)))>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];
                                    var thirdResult = Model.ResultSet[2];
                                    var fourthResult = Model.ResultSet[3];
                                    var fifthResult = Model.ResultSet[4];
                                    var sixresult = Model.ResultSet[5];
                                    var sevenresult = Model.ResultSet[6];
                                    var eightresult = Model.ResultSet[7];
                                    var nineresult = Model.ResultSet[8];
                                    var tenresult = Model.ResultSet[9];
                                    var elevenresult = Model.ResultSet[10];
                                    var twelveresult = Model.ResultSet[11];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');
                                    var splitDataValue3 = thirdResult.Value.Split('-');
                                    var splitDataValue4 = fourthResult.Value.Split('-');
                                    var splitDataValue5 = fifthResult.Value.Split('-');
                                    var splitDataValue6 = sixresult.Value.Split('-');
                                    var splitDataValue7 = sevenresult.Value.Split('-');
                                    var splitDataValue8 = eightresult.Value.Split('-');
                                    var splitDataValue9 = nineresult.Value.Split('-');
                                    var splitDataValue10 = tenresult.Value.Split('-');
                                    var splitDataValue11 = elevenresult.Value.Split('-');
                                    var splitDataValue12 = twelveresult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length, splitDataValue3.Length, splitDataValue4.Length, splitDataValue5.Length, splitDataValue6.Length, splitDataValue7.Length, splitDataValue8.Length, splitDataValue9.Length, splitDataValue10.Length, splitDataValue11.Length,splitDataValue12.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add((
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        (
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty,
                                        i < splitDataValue3.Length ? splitDataValue3[i] : string.Empty,
                                        i < splitDataValue4.Length ? splitDataValue4[i] : string.Empty,
                                        i < splitDataValue5.Length ? splitDataValue5[i] : string.Empty,
                                        i < splitDataValue6.Length ? splitDataValue6[i] : string.Empty,
                                        i < splitDataValue7.Length ? splitDataValue7[i] : string.Empty,
                                        (
                                        i < splitDataValue8.Length ? splitDataValue8[i] : string.Empty,
                                        i < splitDataValue9.Length ? splitDataValue9[i] : string.Empty,
                                        i < splitDataValue10.Length ? splitDataValue10[i] : string.Empty,
                                        i < splitDataValue11.Length ? splitDataValue11[i] : string.Empty,
                                        i < splitDataValue12.Length ? splitDataValue12[i] : string.Empty
                                        )
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                    @foreach (var row in last50Rows)
                                    {
                                    <tr>
                                        <td>@Model.ResultSet[0].UrunId</td>
                                        <td>@row.Item1</td>
                                        <td>@row.Item2</td>
                                        <td>@row.Item3</td>
                                        <td>@row.Item4</td>
                                        <td>@row.Item5</td>
                                        <td>@row.Item6</td>
                                        <td>@row.Item7</td>
                                        <td>@row.Item8.Item1</td>
                                        <td>@row.Item8.Item2</td>
                                        <td>@row.Item8.Item3</td>
                                        <td>@row.Item8.Item4</td>
                                        <td>@row.Item8.Item5</td>
                                        <td>@row.Item8.Item6</td>
                                        <td>@row.Item8.Item7</td>
                                        <td>@row.Item8.Item8.Item1</td>
                                        <td>@row.Item8.Item8.Item2</td>
                                        <td>@row.Item8.Item8.Item3</td>
                                        <td>@row.Item8.Item8.Item4</td>
                                        <td>@row.Item8.Item8.Item5</td>
                                    </tr>
                                    }

                                }
                                else if (Model.ResultSet.Count == 13)
                                {
                                    var rowData = new List<(string, string, string, string, string, string, string, (string, string, string, string, string, string, string, (string, string, string, string, string,string)))>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];
                                    var thirdResult = Model.ResultSet[2];
                                    var fourthResult = Model.ResultSet[3];
                                    var fifthResult = Model.ResultSet[4];
                                    var sixresult = Model.ResultSet[5];
                                    var sevenresult = Model.ResultSet[6];
                                    var eightresult = Model.ResultSet[7];
                                    var nineresult = Model.ResultSet[8];
                                    var tenresult = Model.ResultSet[9];
                                    var elevenresult = Model.ResultSet[10];
                                    var twelveresult = Model.ResultSet[11];
                                    var thirteenresult = Model.ResultSet[12];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');
                                    var splitDataValue3 = thirdResult.Value.Split('-');
                                    var splitDataValue4 = fourthResult.Value.Split('-');
                                    var splitDataValue5 = fifthResult.Value.Split('-');
                                    var splitDataValue6 = sixresult.Value.Split('-');
                                    var splitDataValue7 = sevenresult.Value.Split('-');
                                    var splitDataValue8 = eightresult.Value.Split('-');
                                    var splitDataValue9 = nineresult.Value.Split('-');
                                    var splitDataValue10 = tenresult.Value.Split('-');
                                    var splitDataValue11 = elevenresult.Value.Split('-');
                                    var splitDataValue12 = twelveresult.Value.Split('-');
                                    var splitDataValue13 = thirteenresult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length, splitDataValue3.Length, splitDataValue4.Length, splitDataValue5.Length, splitDataValue6.Length, splitDataValue7.Length, splitDataValue8.Length, splitDataValue9.Length, splitDataValue10.Length, splitDataValue11.Length, splitDataValue12.Length, splitDataValue13.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add((
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        (
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty,
                                        i < splitDataValue3.Length ? splitDataValue3[i] : string.Empty,
                                        i < splitDataValue4.Length ? splitDataValue4[i] : string.Empty,
                                        i < splitDataValue5.Length ? splitDataValue5[i] : string.Empty,
                                        i < splitDataValue6.Length ? splitDataValue6[i] : string.Empty,
                                        i < splitDataValue7.Length ? splitDataValue7[i] : string.Empty,
                                        (
                                        i < splitDataValue8.Length ? splitDataValue8[i] : string.Empty,
                                        i < splitDataValue9.Length ? splitDataValue9[i] : string.Empty,
                                        i < splitDataValue10.Length ? splitDataValue10[i] : string.Empty,
                                        i < splitDataValue11.Length ? splitDataValue11[i] : string.Empty,
                                        i < splitDataValue12.Length ? splitDataValue12[i] : string.Empty,
                                        i < splitDataValue13.Length ? splitDataValue13[i] : string.Empty

                                        )
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                    @foreach (var row in last50Rows)
                                    {
                                    <tr>
                                        <td>@Model.ResultSet[0].UrunId</td>
                                        <td>@row.Item1</td>
                                        <td>@row.Item2</td>
                                        <td>@row.Item3</td>
                                        <td>@row.Item4</td>
                                        <td>@row.Item5</td>
                                        <td>@row.Item6</td>
                                        <td>@row.Item7</td>
                                        <td>@row.Item8.Item1</td>
                                        <td>@row.Item8.Item2</td>
                                        <td>@row.Item8.Item3</td>
                                        <td>@row.Item8.Item4</td>
                                        <td>@row.Item8.Item5</td>
                                        <td>@row.Item8.Item6</td>
                                        <td>@row.Item8.Item7</td>
                                        <td>@row.Item8.Item8.Item1</td>
                                        <td>@row.Item8.Item8.Item2</td>
                                        <td>@row.Item8.Item8.Item3</td>
                                        <td>@row.Item8.Item8.Item4</td>
                                        <td>@row.Item8.Item8.Item5</td>
                                        <td>@row.Item8.Item8.Item6</td>
                                    </tr>
                                    }

                                }
                                else if (Model.ResultSet.Count == 14)
                                {
                                    var rowData = new List<(string, string, string, string, string, string, string, (string, string, string, string, string, string, string, (string, string, string, string, string, string,string)))>();

                                    var firstResult = Model.ResultSet[0];
                                    var secondResult = Model.ResultSet[1];
                                    var thirdResult = Model.ResultSet[2];
                                    var fourthResult = Model.ResultSet[3];
                                    var fifthResult = Model.ResultSet[4];
                                    var sixresult = Model.ResultSet[5];
                                    var sevenresult = Model.ResultSet[6];
                                    var eightresult = Model.ResultSet[7];
                                    var nineresult = Model.ResultSet[8];
                                    var tenresult = Model.ResultSet[9];
                                    var elevenresult = Model.ResultSet[10];
                                    var twelveresult = Model.ResultSet[11];
                                    var thirteenresult = Model.ResultSet[12];
                                    var fourteenresult = Model.ResultSet[13];

                                    var SiraNo = firstResult.SiraNo.Split('-');
                                    var UretimTarihi = firstResult.UretimTarihi.Split('*');
                                    var KontrolSaati = firstResult.KontrolSaati.Split('*');
                                    var NumuneSeriNo = firstResult.NumuneSeriNoSarjNo.Split('-');
                                    var Mudahale = firstResult.MudahaleVarmi.Split('-');
                                    var splitDataAciklama = firstResult.Aciklama.Split('-');
                                    var AmirOnayDurumu = firstResult.AmirOnayDurumu.Split('-');
                                    var splitDataValue = firstResult.Value.Split('-');
                                    var splitDataValue2 = secondResult.Value.Split('-');
                                    var splitDataValue3 = thirdResult.Value.Split('-');
                                    var splitDataValue4 = fourthResult.Value.Split('-');
                                    var splitDataValue5 = fifthResult.Value.Split('-');
                                    var splitDataValue6 = sixresult.Value.Split('-');
                                    var splitDataValue7 = sevenresult.Value.Split('-');
                                    var splitDataValue8 = eightresult.Value.Split('-');
                                    var splitDataValue9 = nineresult.Value.Split('-');
                                    var splitDataValue10 = tenresult.Value.Split('-');
                                    var splitDataValue11 = elevenresult.Value.Split('-');
                                    var splitDataValue12 = twelveresult.Value.Split('-');
                                    var splitDataValue13 = thirteenresult.Value.Split('-');
                                    var splitDataValue14 = fourteenresult.Value.Split('-');

                                    int maxLength = new[] { SiraNo.Length, UretimTarihi.Length, KontrolSaati.Length, NumuneSeriNo.Length, Mudahale.Length, splitDataAciklama.Length, AmirOnayDurumu.Length, splitDataValue.Length, splitDataValue2.Length, splitDataValue3.Length, splitDataValue4.Length, splitDataValue5.Length, splitDataValue6.Length, splitDataValue7.Length, splitDataValue8.Length, splitDataValue9.Length, splitDataValue10.Length, splitDataValue11.Length, splitDataValue12.Length, splitDataValue13.Length, splitDataValue14.Length }.Max();

                                    for (int i = maxLength - 1; i >= 0; i--)
                                    {
                                        rowData.Add((
                                        i < SiraNo.Length ? SiraNo[i] : string.Empty,
                                        i < UretimTarihi.Length ? UretimTarihi[i] : string.Empty,
                                        i < KontrolSaati.Length ? KontrolSaati[i] : string.Empty,
                                        i < NumuneSeriNo.Length ? NumuneSeriNo[i] : string.Empty,
                                        i < Mudahale.Length ? Mudahale[i] : string.Empty,
                                        i < splitDataAciklama.Length ? splitDataAciklama[i] : string.Empty,
                                        i < AmirOnayDurumu.Length ? AmirOnayDurumu[i] : string.Empty,
                                        (
                                        i < splitDataValue.Length ? splitDataValue[i] : string.Empty,
                                        i < splitDataValue2.Length ? splitDataValue2[i] : string.Empty,
                                        i < splitDataValue3.Length ? splitDataValue3[i] : string.Empty,
                                        i < splitDataValue4.Length ? splitDataValue4[i] : string.Empty,
                                        i < splitDataValue5.Length ? splitDataValue5[i] : string.Empty,
                                        i < splitDataValue6.Length ? splitDataValue6[i] : string.Empty,
                                        i < splitDataValue7.Length ? splitDataValue7[i] : string.Empty,
                                        (
                                        i < splitDataValue8.Length ? splitDataValue8[i] : string.Empty,
                                        i < splitDataValue9.Length ? splitDataValue9[i] : string.Empty,
                                        i < splitDataValue10.Length ? splitDataValue10[i] : string.Empty,
                                        i < splitDataValue11.Length ? splitDataValue11[i] : string.Empty,
                                        i < splitDataValue12.Length ? splitDataValue12[i] : string.Empty,
                                        i < splitDataValue13.Length ? splitDataValue13[i] : string.Empty,
                                        i < splitDataValue14.Length ? splitDataValue14[i] : string.Empty


                                        )
                                        )
                                        ));
                                    }

                                    var last50Rows = rowData.TakeLast(50).ToList();

                                    @foreach (var row in last50Rows)
                                    {
                                    <tr>
                                        <td>@Model.ResultSet[0].UrunId</td>
                                        <td>@row.Item1</td>
                                        <td>@row.Item2</td>
                                        <td>@row.Item3</td>
                                        <td>@row.Item4</td>
                                        <td>@row.Item5</td>
                                        <td>@row.Item6</td>
                                        <td>@row.Item7</td>
                                        <td>@row.Item8.Item1</td>
                                        <td>@row.Item8.Item2</td>
                                        <td>@row.Item8.Item3</td>
                                        <td>@row.Item8.Item4</td>
                                        <td>@row.Item8.Item5</td>
                                        <td>@row.Item8.Item6</td>
                                        <td>@row.Item8.Item7</td>
                                        <td>@row.Item8.Item8.Item1</td>
                                        <td>@row.Item8.Item8.Item2</td>
                                        <td>@row.Item8.Item8.Item3</td>
                                        <td>@row.Item8.Item8.Item4</td>
                                        <td>@row.Item8.Item8.Item5</td>
                                        <td>@row.Item8.Item8.Item6</td>
                                        <td>@row.Item8.Item8.Item7</td>
                                    </tr>
                                    }

                                }
                                
                                        }
                    </tbody>

                </table>

            }
            else
            {
                <p class="no-results">Sonuç bulunamadı, verileri tekrar kontrol ediniz.</p>
            }

        </div>

    </div>
    <script>

        document.addEventListener('DOMContentLoaded', function () {

            var now = new Date();


            var formattedDate = now.toISOString().slice(0, 16);

            document.querySelector('[name="OlusturmaTarihi"]').value = formattedDate;
        });
    </script>
    <script>
        var jsonStr = '@Html.Raw(JavaScriptEncoder.Default.Encode(JsonSerializer.Serialize(Model?.ResultSet)))'
        var json = JSON.parse(jsonStr)
        console.log(json)
        let inputStatus = new Map();

        function checkColors() {
            var fields = document.getElementsByClassName("colorcheck");
        }

        function updateColor(index) {
            var element = document.getElementById('' + index);
            var value = parseFloat(element.value);
            var lowerLimit = json[index].AltOnaySiniri;
            var upperLimit = json[index].UstOnaySiniri;
            var lowerConditionalLimit = json[index].AltSartliKabulSiniri
            var upperConditionalLimit = json[index].UstSartliKabulSiniri
            var isValidNumber = !isNaN(value);
            var color = "red"; 

            if (isValidNumber) {
                if (value >= lowerLimit && value <= upperLimit) {
                    color = "green";
                } else if (value >= lowerConditionalLimit && value <= upperConditionalLimit) {
                    color = "yellow";
                }
            }

            setAndCheckMode(index, color);

            element.style.backgroundColor = color;
            checkColors();
        }

        function setAndCheckMode(index, color) {
            inputStatus.set(index, color);

            let count = {
                red: 0,
                yellow: 0,
                green: 0,
            };

            inputStatus.forEach((value, index, map) => {

                // count[value] += 1;(Esogü151320183101FrknProje)

                if (value == 'red') {
                    count.red += 1;
                } else if (value == 'yellow') {
                    count.yellow += 1;
                } else if (value == 'green') {
                    count.green += 1;
                }
            })
            document.querySelector('[name="red"]').value = count.red;
            document.querySelector('[name="yellow"]').value = count.yellow;
            document.querySelector('[name="green"]').value = count.green;

            if (count.red > 0) {
                document.getElementById('onay_durumu').value = 'red';
                document.getElementById('onay_durumu_p').innerHTML = 'Üretimi Durdur!';
                document.getElementById('onay_durumu_p').style.backgroundColor = 'red';
            } else if (count.yellow > 0) {
                document.getElementById('onay_durumu').value = 'yellow';
                document.getElementById('onay_durumu_p').innerHTML = 'Onay Bekliyor!';
                document.getElementById('onay_durumu_p').style.backgroundColor = 'yellow';
            } else {
                document.getElementById('onay_durumu').value = 'green';
                document.getElementById('onay_durumu_p').innerHTML = 'Uygun Sonuçlar';
                document.getElementById('onay_durumu_p').style.backgroundColor = 'green';
            }



                console.log(count)
        }
    
    </script>
    <script>
        function toCamelCase(str) {
            return str.replace(/([-_][a-z])/gi, function ($1) {
                return $1.toUpperCase().replace('-', '').replace('_', '');
            }).replace(/^[A-Z]/, function (match) {
                return match.toLowerCase();
            });
        }
        document.getElementById('sendButton').addEventListener('click', function (e) {
            e.preventDefault();

            var fields = document.getElementsByClassName("static");
            var formdata = {};
            for (var i = 0; i < fields.length; i++) {
                var field = fields[i];
                var name = field.name;
                let value;
                if (field.type === "checkbox")
                    value = field.checked;
                else {
                    if (!name.startsWith("Value"))
                        value = field.value.trim();
                    else
                        value = field.value ? field.value : "1"
                    console.log(name, value);
                }

                formdata[toCamelCase(name)] = value;
            }
            console.log(formdata);



            var jsonData = JSON.stringify(formdata);

            console.log("Gönderilen veriler:", jsonData);

            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/Unumune/CreateUnumune", true);
            xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        alert('Numune ve Value ekleme işlemi başarıyla tamamlandı!');
                        clearForm();
                    } else {
                        alert('Numune ve Value ekleme işleminde bir hata oluştu.Amirinize danışınız!');
                        window.location.href = '/GetUpatamaKodlariByUrunID/Index';
                    }
                }
            };
            xhr.send(jsonData);
        });

    </script>

</body>
</html>